rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Check if a user is an admin
    function isAdmin(uid, email) {
      return (uid == "owM9kxvXLLadr4lR0KkgifJRJda2" && email == "j.r.locke20@gmail.com");
    }

    // Check if a user has access to a map
    function canAccessMap(mapData, uid, email) {
      return mapData.createdBy == uid || 
             (mapData.invitedUsers != null && 
              (mapData.invitedUsers[uid] == true || mapData.invitedUsers[email] == true)) || 
             isAdmin(uid, email);
    }

    // Maps Collection
    match /maps/{mapId} {
      allow read, write, delete: if request.auth != null && isAdmin(request.auth.uid, request.auth.token.email);
      
      allow read, update, delete: if request.auth != null && canAccessMap(resource.data, request.auth.uid, request.auth.token.email);
      
      allow create: if request.auth != null;
    }

    // Markers Collection
    match /markers/{markerId} {
      allow read, write, delete: if request.auth != null && isAdmin(request.auth.uid, request.auth.token.email);

      allow read, update, delete: if request.auth != null &&
                                  (request.auth.uid == resource.data.createdBy || 
                                   isAdmin(request.auth.uid, request.auth.token.email));

      allow create: if request.auth != null;
    }

    // Paths Collection
    match /paths/{pathId} {
      allow read, write, delete: if request.auth != null && isAdmin(request.auth.uid, request.auth.token.email);
      
      allow read, update, delete: if request.auth != null &&
                                  (request.auth.uid == resource.data.createdBy || 
                                   isAdmin(request.auth.uid, request.auth.token.email));

      allow create: if request.auth != null;
    }

    // Pins Collection
    match /pins/{pinId} {
      allow read, write, delete: if request.auth != null && isAdmin(request.auth.uid, request.auth.token.email);

      allow read, update, delete: if request.auth != null &&
                                  (request.auth.uid == resource.data.createdBy || 
                                   isAdmin(request.auth.uid, request.auth.token.email));

      allow create: if request.auth != null;
    }

    // Users Collection
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Tags Collection
    match /tags/{tagId} {
      allow read, write: if request.auth != null;
    }
  }
}